services:
  scylla:
    image: scylladb/scylla:6.1
    container_name: analytics_scylla
    command: >
      --smp 1
      --memory 2G
      --overprovisioned 1
      --api-address 0.0.0.0
      --skip-wait-for-gossip-to-settle 0
      --disable-version-check
    ports:
      - "${SCYLLA_PORT:-9042}:9042"
    volumes:
      - scylla_data:/var/lib/scylla
    networks:
      - backend_net
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -u $${SCYLLA_USER} -p $${SCYLLA_PASSWORD} -e 'SELECT now() FROM system.local;' >/dev/null 2>&1"]
      interval: 15s
      retries: 10
      start_period: 60s

  clickhouse:
    image: clickhouse/clickhouse-server:23.10-alpine
    container_name: analytics_clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./data:/data
    ports:
      - "${CLICKHOUSE_PORT:-9000}:9000"
      - "${CLICKHOUSE_HTTP_PORT:-8123}:8123"
    networks:
      - backend_net
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: "clickhouse-client -q 'SELECT 1'"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  nats:
    image: nats:2.9.23-alpine
    container_name: analytics_nats
    command: >
      -DV
      --user ${NATS_USER} --pass ${NATS_PASSWORD}
      -m 8222
      --jetstream
      --store_dir /data
    ports:
      - "${NATS_PORT:-4222}:4222"
      - "8222:8222"
    networks:
      - backend_net
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5

  scylla-init:
    container_name: scylla-init
    image: scylladb/scylla-cqlsh:latest
    working_dir: /scripts
    volumes:
      - ./scripts:/scripts
    entrypoint: ["bash", "/scripts/init-scylla.sh"]
    env_file:
      - .env
    depends_on:
      scylla:
        condition: service_healthy
    networks:
      - backend_net
    restart: "no"

  clickhouse-init:
    container_name: clickhouse-init
    image: clickhouse/clickhouse-server:23.10-alpine
    working_dir: /scripts
    volumes:
      - ./scripts:/scripts
      - ./data:/data
      - ./src/cli:/cli
    entrypoint: ["bash", "/scripts/init-clickhouse.sh"]
    env_file:
      - .env
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - backend_net
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    env_file:
      - .env
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"

  data-importer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: data-importer
    volumes:
      - ./data:/data
    command: [ "uv", "run", "python", "src/cli/import_events.py", "/data/events_sample.csv" ]
    env_file:
      - .env
    depends_on:
      clickhouse-init:
        condition: service_completed_successfully
    networks:
      - backend_net
    restart: "no"

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: analytics_backend
    env_file:
      - .env
    ports:
      - "${LITESTAR_PORT:-8000}:8000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      nats:
        condition: service_healthy
      scylla-init:
        condition: service_completed_successfully
      clickhouse-init:
        condition: service_completed_successfully
    networks:
      - backend_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${LITESTAR_PORT:-8000}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: analytics_worker
    depends_on:
      scylla:
        condition: service_healthy
      nats:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    env_file:
      - .env
    working_dir: /app
    command: uv run python src/app/workers/db_worker.py
    networks:
      - backend_net

networks:
  backend_net:
    driver: bridge

volumes:
  scylla_data:
  clickhouse_data:
  nats_data:
